import{_ as a,c as e,o,N as s}from"./chunks/framework.1e6a71f2.js";const u=JSON.parse('{"title":"Markdown","description":"","frontmatter":{},"headers":[],"relativePath":"other/markdown.md","lastUpdated":1679275184000}'),n={name:"other/markdown.md"},t=s('<h1 id="markdown" tabindex="-1">Markdown <a class="header-anchor" href="#markdown" aria-label="Permalink to &quot;Markdown&quot;">​</a></h1><h2 id="ソースコード" tabindex="-1">ソースコード <a class="header-anchor" href="#ソースコード" aria-label="Permalink to &quot;ソースコード&quot;">​</a></h2><h3 id="コードスパン" tabindex="-1">コードスパン <a class="header-anchor" href="#コードスパン" aria-label="Permalink to &quot;コードスパン&quot;">​</a></h3><p><code>`</code> (バッククォート)で囲む</p><p>例：</p><div class="language-md line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">これは </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">ソースコード</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> です</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>表示結果：</p><p>これは <code>ソースコード</code> です</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>コードスパン内に <code>`</code> を使う場合、開始・終了のバッククオートを <code>n+1</code> 個で囲みます</p><p>例えば、</p><p><code>``Use `code` in your Markdown file.``</code>　の書き方だと、表示する時、</p><p><code>Use `code` in your Markdown file.</code> になります。</p></div><h3 id="コードブロック" tabindex="-1">コードブロック <a class="header-anchor" href="#コードブロック" aria-label="Permalink to &quot;コードブロック&quot;">​</a></h3><p><code>```</code> 或いは <code>~~~</code></p>',11),r=[t];function d(c,l,p,i,h,m){return o(),e("div",null,r)}const k=a(n,[["render",d]]);export{u as __pageData,k as default};
