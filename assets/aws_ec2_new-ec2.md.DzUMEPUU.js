import{_ as a,c as e,o,a2 as t}from"./chunks/framework.Sicmpk4x.js";const c="/assets/new-instans.BCthkBjo.png",p="/assets/new-key.B5beeEDv.png",i="/assets/new-key-detail.CMeNoiTi.png",s="/assets/ec2-instans.Bmfb_LHs.png",f=JSON.parse('{"title":"EC2 の開始方法","description":"","frontmatter":{},"headers":[],"relativePath":"aws/ec2/new-ec2.md","filePath":"aws/ec2/new-ec2.md","lastUpdated":1707452619000}'),l={name:"aws/ec2/new-ec2.md"},d=t('<h1 id="ec2-の開始方法" tabindex="-1">EC2 の開始方法 <a class="header-anchor" href="#ec2-の開始方法" aria-label="Permalink to &quot;EC2 の開始方法&quot;">​</a></h1><h2 id="インスタンスを起動" tabindex="-1">インスタンスを起動 <a class="header-anchor" href="#インスタンスを起動" aria-label="Permalink to &quot;インスタンスを起動&quot;">​</a></h2><h3 id="「インスタンスを起動」ボタン押下" tabindex="-1">「インスタンスを起動」ボタン押下 <a class="header-anchor" href="#「インスタンスを起動」ボタン押下" aria-label="Permalink to &quot;「インスタンスを起動」ボタン押下&quot;">​</a></h3><p><img src="'+c+'" alt="インスタンスを起動"></p><h2 id="設定値" tabindex="-1">設定値 <a class="header-anchor" href="#設定値" aria-label="Permalink to &quot;設定値&quot;">​</a></h2><h3 id="名前とタグ" tabindex="-1">名前とタグ <a class="header-anchor" href="#名前とタグ" aria-label="Permalink to &quot;名前とタグ&quot;">​</a></h3><p>自由に設定すればいい。</p><h3 id="アプリケーションおよび-os-イメージ-amazon-マシンイメージ" tabindex="-1">アプリケーションおよび OS イメージ (Amazon マシンイメージ) <a class="header-anchor" href="#アプリケーションおよび-os-イメージ-amazon-マシンイメージ" aria-label="Permalink to &quot;アプリケーションおよび OS イメージ (Amazon マシンイメージ)&quot;">​</a></h3><p>自分に合うイメージを選択しましょう。</p><p>今回は最新の Amazon Linux 2023 にします。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>安くて性能がいいので、今回は <code>Arm</code> バージョン使います</p></div><h3 id="インスタンスタイプ" tabindex="-1">インスタンスタイプ <a class="header-anchor" href="#インスタンスタイプ" aria-label="Permalink to &quot;インスタンスタイプ&quot;">​</a></h3><p>今回は比較的に安い <code>t4g</code> を使います。</p><h3 id="キーペア-ログイン" tabindex="-1">キーペア (ログイン) <a class="header-anchor" href="#キーペア-ログイン" aria-label="Permalink to &quot;キーペア (ログイン)&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>最新のバージョンでは <code>amazon-ssm-agent</code> 既にインストールされているのでこの手順がなくても大丈夫です。</p></div><p>SSM（AWS Systems Manager）を使ってキーなしでもいいですが、SSHツールなど使う場合、キーを作ったほうがいいです。 既存キーがない場合は、「新しいキーペアの作成」で新しいキーペアを作成します。</p><h4 id="キーペア作成" tabindex="-1">キーペア作成 <a class="header-anchor" href="#キーペア作成" aria-label="Permalink to &quot;キーペア作成&quot;">​</a></h4><ol><li><p>「新しいキーペアの作成」押下 <img src="'+p+'" alt="新しいキーペアの作成"></p></li><li><p>詳細設定</p><ol><li><p>キーペア名</p><p>自由に設定すればいい。</p></li><li><p>キーペアのタイプ</p><p>どちらでもいい、新しい <code>ED25519</code> にします。</p></li><li><p>プライベートキーファイル形式</p><p><code>PuTTY</code> 使わないので、<code>.pem</code> にします。</p><p><code>PuTTY</code> を使う場合は <code>.ppk</code> にしましょう。</p><p><img src="'+i+'" alt="キーペア作成詳細設定"></p><p>こんな感じ、「キーペアを作成」押下で新しいキーペアをダウンロードします。</p></li></ol></li></ol><h3 id="ネットワーク設定" tabindex="-1">ネットワーク設定 <a class="header-anchor" href="#ネットワーク設定" aria-label="Permalink to &quot;ネットワーク設定&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>「編集」押下で編集可能な状態になる</p></div><ul><li><p>VPC</p><p><a href="/aws/vpc/new-vpc.html">VPC の開始方法</a> で作成したVPCを選択</p></li><li><p>サブネット</p><p>外部からアクセスする必要なので、<code>public</code> のサブネットを選択しましょう。</p></li><li><p>パブリック IP の自動割り当て</p><p><code>有効化</code> にしましょう。</p></li><li><p>IPv6 IP を自動で割り当てる</p><p><code>有効化</code> にしましょう。</p></li><li><p>ファイアウォール (セキュリティグループ)</p><p><code>セキュリティグループを作成する</code> と <code>既存のセキュリティグループを選択する</code> どちらでもいい。</p></li><li><p>インバウンドセキュリティグループのルール</p><p>デフォルトで <code>ssh</code> できるように <code>22</code> ポート許容になっているので、最低限これでいいでしょう。（ほかは起動後追加可能）</p></li></ul><p>その他の設定はとりあえずデフォルトでインスタンスを起動します。</p><p>起動後、下記のように表示されます。</p><p><img src="'+s+'" alt="インスタンス起動後"></p>',24),r=[d];function n(h,m,u,_,b,P){return o(),e("div",null,r)}const q=a(l,[["render",n]]);export{f as __pageData,q as default};
