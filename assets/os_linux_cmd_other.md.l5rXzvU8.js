import{_ as a,c as e,o as s,V as i}from"./chunks/framework.SIcx0bZA.js";const m=JSON.parse('{"title":"その他コマンド","description":"","frontmatter":{},"headers":[],"relativePath":"os/linux/cmd/other.md","filePath":"os/linux/cmd/other.md","lastUpdated":1707472303000}'),t={name:"os/linux/cmd/other.md"},h=i('<h1 id="その他コマンド" tabindex="-1">その他コマンド <a class="header-anchor" href="#その他コマンド" aria-label="Permalink to &quot;その他コマンド&quot;">​</a></h1><h2 id="nohup" tabindex="-1">nohup <a class="header-anchor" href="#nohup" aria-label="Permalink to &quot;nohup&quot;">​</a></h2><h3 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h3><p>コマンドを実行している際に、仮想端末（Terminal）の画面を閉じたりログアウトしたりすると、実行中のコマンドも終了してしまいます（コマンドをバックグラウンド実行していても終了する）。</p><p>コマンド起動時に <code>nohup コマンド &amp;</code> と指定することで、このような場合でもそのままコマンドの実行を続けることができます</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>末尾の <code>&amp;</code> を忘れないように！</p></div><h3 id="構文" tabindex="-1">構文 <a class="header-anchor" href="#構文" aria-label="Permalink to &quot;構文&quot;">​</a></h3><p>nohup コマンド &amp;</p><h3 id="実行例" tabindex="-1">実行例 <a class="header-anchor" href="#実行例" aria-label="Permalink to &quot;実行例&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm vite --mode mock </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="効かない場合" tabindex="-1">効かない場合 <a class="header-anchor" href="#効かない場合" aria-label="Permalink to &quot;効かない場合&quot;">​</a></h3><p><code>shopt -u huponexit</code> コマンドを事前時実行すれば解決</p><h2 id="shopt" tabindex="-1">shopt <a class="header-anchor" href="#shopt" aria-label="Permalink to &quot;shopt&quot;">​</a></h2><h3 id="説明-1" tabindex="-1">説明 <a class="header-anchor" href="#説明-1" aria-label="Permalink to &quot;説明&quot;">​</a></h3><p>bashのシェルオプションを変更するコマンド</p><h3 id="構文-1" tabindex="-1">構文 <a class="header-anchor" href="#構文-1" aria-label="Permalink to &quot;構文&quot;">​</a></h3><h4 id="オプション有効化" tabindex="-1">オプション有効化 <a class="header-anchor" href="#オプション有効化" aria-label="Permalink to &quot;オプション有効化&quot;">​</a></h4><p>shopt -s [オプション]</p><h4 id="オプション無効化" tabindex="-1">オプション無効化 <a class="header-anchor" href="#オプション無効化" aria-label="Permalink to &quot;オプション無効化&quot;">​</a></h4><p>shopt -u [オプション]</p><h4 id="設定状況を一覧で表示" tabindex="-1">設定状況を一覧で表示 <a class="header-anchor" href="#設定状況を一覧で表示" aria-label="Permalink to &quot;設定状況を一覧で表示&quot;">​</a></h4><p>shopt -p</p><h3 id="設定例" tabindex="-1">設定例 <a class="header-anchor" href="#設定例" aria-label="Permalink to &quot;設定例&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shopt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> huponexit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>※<code>huponexit</code> を無効（OFF）にする</p>',25),o=[h];function n(r,l,p,d,c,u){return s(),e("div",null,o)}const k=a(t,[["render",n]]);export{m as __pageData,k as default};
